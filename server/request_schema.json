{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "requestBody",
  "type": "object",
  "required": [
    "messages",
    "model"
  ],
  "properties": {
    "messages": {
      "description": "A list of messages comprising the conversation so far.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/message"
      }
    },
    "model": {
      "description": "ID of the model to use.",
      "allOf": [
        {
          "$ref": "#/definitions/model"
        }
      ]
    }
  },
  "definitions": {
    "MessageContent": {
      "anyOf": [
        {
          "description": "The text contents of the message.",
          "type": "string"
        },
        {
          "description": "An array of content parts with a defined type, each can be of type text or image_url when passing in images. You can pass multiple images by adding multiple image_url content parts. Image input is only supported when using the gpt-4o model.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageContentPart"
          }
        }
      ]
    },
    "MessageContentPart": {
      "anyOf": [
        {
          "type": "object",
          "required": [
            "text",
            "type"
          ],
          "properties": {
            "text": {
              "description": "The text content.",
              "type": "string"
            },
            "type": {
              "description": "The type of the content part.",
              "type": "string"
            }
          }
        },
        {
          "type": "object",
          "required": [
            "image_url",
            "type"
          ],
          "properties": {
            "image_url": {
              "$ref": "#/definitions/image_url"
            },
            "type": {
              "description": "The type of the content part.",
              "type": "string"
            }
          }
        }
      ]
    },
    "function": {
      "type": "object",
      "required": [
        "arguments",
        "name"
      ],
      "properties": {
        "arguments": {
          "description": "The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may hallucinate parameters not defined by your function schema. Validate the arguments in your code before calling your function.",
          "type": "string"
        },
        "name": {
          "description": "The name of the function to call.",
          "type": "string"
        }
      }
    },
    "image_url": {
      "type": "object",
      "required": [
        "url"
      ],
      "properties": {
        "detail": {
          "description": "Specifies the detail level of the image.",
          "type": [
            "string",
            "null"
          ]
        },
        "url": {
          "description": "Either a URL of the image or the base64 encoded image data.",
          "type": "string"
        }
      }
    },
    "message": {
      "type": "object",
      "required": [
        "role"
      ],
      "properties": {
        "content": {
          "description": "The contents of the message.",
          "anyOf": [
            {
              "$ref": "#/definitions/MessageContent"
            },
            {
              "type": "null"
            }
          ]
        },
        "name": {
          "description": "An optional name for the participant. Provides the model information to differentiate between participants of the same role.",
          "type": [
            "string",
            "null"
          ]
        },
        "refusal": {
          "description": "The refusal message by the assistant.",
          "type": [
            "string",
            "null"
          ]
        },
        "role": {
          "description": "The role of the messages author.",
          "allOf": [
            {
              "$ref": "#/definitions/role"
            }
          ]
        },
        "tool_call_id": {
          "description": "Tool call that this message is responding to.",
          "type": "string"
        },
        "tool_calls": {
          "description": "The tool calls generated by the model, such as function calls.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/tool_call"
          }
        }
      }
    },
    "model": {
      "description": "ID of the model to use.",
      "type": "string",
      "enum": [
        "llama3"
      ]
    },
    "role": {
      "oneOf": [
        {
          "description": "The role of the messages author, in this case system.",
          "type": "string",
          "enum": [
            "system"
          ]
        },
        {
          "description": "The role of the messages author, in this case user.",
          "type": "string",
          "enum": [
            "user"
          ]
        },
        {
          "description": "The role of the messages author, in this case assistant.",
          "type": "string",
          "enum": [
            "assistant"
          ]
        },
        {
          "description": "The role of the messages author, in this case tool.",
          "type": "string",
          "enum": [
            "tool"
          ]
        }
      ]
    },
    "tool_call": {
      "type": "object",
      "required": [
        "function",
        "id",
        "type"
      ],
      "properties": {
        "function": {
          "description": "The function that the model called.",
          "allOf": [
            {
              "$ref": "#/definitions/function"
            }
          ]
        },
        "id": {
          "description": "The ID of the tool call.",
          "type": "string"
        },
        "type": {
          "description": "The type of the tool. Currently, only function is supported.",
          "type": "string"
        }
      }
    }
  }
}